---
apiVersion: cdi.kubevirt.io/v1beta1
kind: CDI
metadata:
  name: cdi
spec:
  config:
    featureGates:
      - HonorWaitForFirstConsumer
  customizeComponents:
    patches:
      - resourceType: Deployment
        resourceName: cdi-apiserver
        patch: '{"spec":{"template":{"spec": {"hostNetwork": true}}}}'
        type: strategic
  imagePullPolicy: IfNotPresent
  infra:
    nodeSelector:
      kubernetes.io/os: linux
    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
  workload:
    nodeSelector:
      kubernetes.io/os: linux
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "cdi.kubevirt.io:clone"
rules:
  - apiGroups: ["cdi.kubevirt.io"]
    resources: ["datavolumes/source"]
    verbs: ["create"]
---
apiVersion: kubevirt.io/v1
kind: KubeVirt
metadata:
  name: kubevirt
  namespace: kubevirt
spec:
  certificateRotateStrategy: {}
  configuration:
    commonInstancetypesDeployment:
      enabled: false
    migrations:
      parallelMigrationsPerCluster: 100
      parallelOutboundMigrationsPerNode: 20   # a m5n.metal node has a 100Gbps network throughput
      bandwidthPerMigration: 5Gi
      completionTimeoutPerGiB: 60
      progressTimeout: 60
      allowAutoConverge: true
    developerConfiguration:
      useEmulation: false
      featureGates:
        - VMExport
        - Snapshot
        - LiveMigration
        - ExpandDisks
  customizeComponents:
    patches:
      - resourceType: Deployment
        resourceName: virt-api
        patch: '[{"op": "replace", "path": "/spec/template/spec/containers/0/args/1", "value": "8456"}, {"op": "replace", "path": "/spec/template/spec/containers/0/ports/0/containerPort", "value": 8456},{"op": "replace", "path": "/spec/template/spec/containers/0/readinessProbe/httpGet/port", "value": 8456},{"op": "replace", "path": "/spec/template/spec/containers/0/ports/1/containerPort", "value": 8457}]'
        type: json
      - resourceType: Service
        resourceName: virt-api
        patch: '[{"op": "replace", "path": "/spec/ports/0/targetPort", "value": 8456}]'
        type: json
      - resourceType: Deployment
        resourceName: virt-api
        patch: '{"spec":{"template":{"spec": {"hostNetwork": true}}}}'
        type: strategic
  imagePullPolicy: IfNotPresent
  workloadUpdateStrategy: {}
  workloads:
    nodePlacement:
      nodeSelector:
        karpenter.k8s.aws/instance-size: metal
      tolerations:
        - key: pelo.tech/kvm
          operator: Exists

  # We need to override nodeSelector because otherwise kubevirt defaults to control-plane/master nodes
  # https://github.com/kubevirt/kubevirt/blob/c1cddaaf7ad6b4e368735c6e34734c81d8658932/pkg/virt-operator/resource/apply/reconcile.go#L147
  infra:
    nodePlacement:
      nodeSelector:
        karpenter.sh/nodepool: spot
