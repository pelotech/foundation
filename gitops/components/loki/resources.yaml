---
apiVersion: v1
kind: Namespace
metadata:
  name: loki
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: admins
  destination:
    namespace: loki
    name: in-cluster
  syncPolicy:
    automated: {}
  source:
    repoURL: https://grafana.github.io/helm-charts
    chart: loki
    targetRevision: 5.36.3
    helm:
      releaseName: loki
      parameters:
        - name: serviceAccount.annotations.eks\.amazonaws\.com/role-arn
          value: LOKI_ROLE_ARN
        - name: 'gateway.ingress.hosts[0].host'
          value: LOKI_GATEWAY_HOST
        - name: 'gateway.ingress.tls[0].hosts[0]'
          value: LOKI_GATEWAY_HOST
        - name: loki.storage.s3.region
          value: AWS_REGION
        - name: loki.storage.bucketNames.chunks
          value: LOKI_S3_BUCKET
        - name: loki.storage.bucketNames.ruler
          value: LOKI_S3_BUCKET
        - name: loki.storage.bucketNames.admin
          value: LOKI_S3_BUCKET
      values: |
        serviceAccount:
          create: true
          name: loki
          annotations:
            eks.amazonaws.com/sts-regional-endpoints: "true"
        singleBinary:
          replicas: 2
          persistence:
            enabled: false
            enableStatefulSetAutoDeletePVC: false
          # https://github.com/grafana/loki/issues/6370
          extraArgs:
            - -config.expand-env=true
          extraEnv:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        write:
          replicas: 0
        read:
          replicas: 0
        backend:
          replicas: 0
        loki:
          extraMemberlistConfig:
            bind_addr:
              - ${MY_POD_IP}
          auth_enabled: false
          commonConfig:
            path_prefix: /tmp/loki
            replication_factor: 2
          storage_config:
            boltdb_shipper:
              shared_store: s3
          compactor:
            retention_enabled: true
            shared_store: s3
          limits_config:
            retention_period: 720h
        gateway:
          enabled: true
          ingress:
            enabled: true
            ingressClassName: "nginx"
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt
              nginx.ingress.kubernetes.io/auth-type: basic
              nginx.ingress.kubernetes.io/auth-secret: loki-basic-auth
            hosts:
              - host: loki.example.com
                paths:
                  - path: /
                    pathType: Prefix
            tls:
              - hosts:
                  - loki.example.com
                secretName: loki-tls
        ingress:
          enabled: false
        monitoring:
          selfMonitoring:
            enabled: false
            grafanaAgent:
              installOperator: false
          serviceMonitor:
            enabled: false
          dashboards:
            enabled: false
          rules:
            enabled: false
          lokiCanary:
            enabled: false
        test:
          # Depends on selfMonitoring.enabled
          enabled: false
